{"version":3,"sources":["serviceWorker.js","components/Header.js","context/Context.js","components/MovieControls.js","components/ResultCard.js","components/Add.js","components/Watched.js","components/Watchlist.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","theme","root","flexGrow","appBar","background","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","movieIcon","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","buttonLinks","link","textDecoration","Header","passResults","classes","useState","query","setQuery","api_call_search","a","apiCall","request","axios","get","response","data","results","className","AppBar","Toolbar","to","Typography","variant","noWrap","Button","InputBase","placeholder","value","onChange","e","preventDefault","target","input","inputProps","Context","createContext","ContextProvider","props","watchStorage","localStorage","getItem","JSON","parse","watchList","setWatchList","watchedStorage","watched","setWatched","useEffect","setItem","stringify","removeFromWatchList","id","newList","filter","movie","Provider","addToWatchList","addToWatched","children","MovieControls","type","useContext","storedMovie","find","o","watchedMovie","isDisabled","IconButton","onClick","disabled","media","ResultCard","poster","description","rating","releaseDate","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","component","substring","CardActions","size","style","href","Add","movies","map","Grid","item","key","poster_path","overview","vote_average","release_date","marginTop","container","justify","Watched","watchedCard","Watchlist","watchlistCard","length","App","setResults","darkTheme","createMuiTheme","ThemeProvider","CssBaseline","exact","path","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.35d26b3e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport TheatersIcon from \"@material-ui/icons/Theaters\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tappBar: {\r\n\t\tbackground: \"#333\",\r\n\t},\r\n\tmenuButton: {\r\n\t\tmarginRight: theme.spacing(2),\r\n\t},\r\n\ttitle: {\r\n\t\tflexGrow: 1,\r\n\t\tdisplay: \"none\",\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\tdisplay: \"block\",\r\n\t\t},\r\n\t},\r\n\tsearch: {\r\n\t\tposition: \"relative\",\r\n\t\tborderRadius: theme.shape.borderRadius,\r\n\t\tbackgroundColor: fade(theme.palette.common.white, 0.15),\r\n\t\t\"&:hover\": {\r\n\t\t\tbackgroundColor: fade(theme.palette.common.white, 0.25),\r\n\t\t},\r\n\t\tmarginLeft: 0,\r\n\t\twidth: \"100%\",\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\tmarginLeft: theme.spacing(1),\r\n\t\t\twidth: \"auto\",\r\n\t\t},\r\n\t},\r\n\tsearchIcon: {\r\n\t\tpadding: theme.spacing(0, 2),\r\n\t\theight: \"100%\",\r\n\t\tposition: \"absolute\",\r\n\t\tpointerEvents: \"none\",\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n\tmovieIcon: {\r\n\t\tmarginRight: 5,\r\n\t},\r\n\tinputRoot: {\r\n\t\tcolor: \"inherit\",\r\n\t},\r\n\tinputInput: {\r\n\t\tpadding: theme.spacing(1, 1, 1, 0),\r\n\t\t// vertical padding + font size from searchIcon\r\n\t\tpaddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n\t\ttransition: theme.transitions.create(\"width\"),\r\n\t\twidth: \"100%\",\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\twidth: \"12ch\",\r\n\t\t\t\"&:focus\": {\r\n\t\t\t\twidth: \"20ch\",\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tbuttonLinks: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tlink: {\r\n\t\ttextDecoration: \"none\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n}));\r\n\r\nexport default function Header({ passResults }) {\r\n\tconst classes = useStyles();\r\n\tconst [query, setQuery] = useState();\r\n\r\n\tconst api_call_search = async () => {\r\n\t\ttry {\r\n\t\t\tconst API_KEY = \"6e103e1edcb88eabdc434b75e2c174b6\";\r\n\t\t\tconst apiCall = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`;\r\n\t\t\tconst request = axios.get(apiCall);\r\n\t\t\tconst response = await request;\r\n\t\t\tpassResults(response.data.results);\r\n\t\t} catch (e) {\r\n\t\t\tpassResults([]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleChange = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetQuery(e.target.value);\r\n\t\tapi_call_search();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<AppBar className={classes.appBar} position=\"static\">\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<Link to=\"/\" className={classes.link}>\r\n\t\t\t\t\t\t<TheatersIcon className={classes.movieIcon} />\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Typography className={classes.title} variant=\"h6\" noWrap>\r\n\t\t\t\t\t\tMovie Watchlist\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<div className={classes.buttonLinks}>\r\n\t\t\t\t\t\t<Link to=\"/\" className={classes.link}>\r\n\t\t\t\t\t\t\t<Button color=\"inherit\">Watchlist</Button>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Link to=\"/watched\" className={classes.link}>\r\n\t\t\t\t\t\t\t<Button color=\"inherit\">Watched</Button>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Link to=\"/add\" className={classes.link}>\r\n\t\t\t\t\t\t<div className={classes.search}>\r\n\t\t\t\t\t\t\t<div className={classes.searchIcon}>\r\n\t\t\t\t\t\t\t\t<SearchIcon />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<InputBase\r\n\t\t\t\t\t\t\t\tplaceholder=\"Search…\"\r\n\t\t\t\t\t\t\t\tvalue={query}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\t\troot: classes.inputRoot,\r\n\t\t\t\t\t\t\t\t\tinput: classes.inputInput,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tinputProps={{ \"aria-label\": \"search\" }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const Context = createContext();\r\n\r\nexport const ContextProvider = (props) => {\r\n\tlet watchStorage = localStorage.getItem(\"watchlist\")\r\n\t\t? JSON.parse(localStorage.getItem(\"watchlist\"))\r\n\t\t: [];\r\n\tconst [watchList, setWatchList] = useState(watchStorage);\r\n\r\n\tlet watchedStorage = localStorage.getItem(\"watched\")\r\n\t\t? JSON.parse(localStorage.getItem(\"watched\"))\r\n\t\t: [];\r\n\tconst [watched, setWatched] = useState(watchedStorage);\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(\"watchlist\", JSON.stringify(watchList));\r\n\t}, [watchList]);\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(\"watched\", JSON.stringify(watched));\r\n\t}, [watched]);\r\n\r\n\t// actions\r\n\tconst addToWatchList = (movie) => {\r\n\t\tsetWatchList([...watchList, movie]);\r\n\t};\r\n\r\n\tconst removeFromWatchList = (id) => {\r\n\t\tlet newList = watchList.filter((movie) => movie.id !== id);\r\n\t\tsetWatchList(newList);\r\n\t};\r\n\r\n\tconst addToWatched = (movie) => {\r\n\t\tsetWatched([...watched, movie]);\r\n\t\tremoveFromWatchList(movie.id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Context.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\taddToWatchList,\r\n\t\t\t\tremoveFromWatchList,\r\n\t\t\t\taddToWatched,\r\n\t\t\t\twatchList: watchList,\r\n\t\t\t\twatched: watched,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</Context.Provider>\r\n\t);\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport { Context } from \"../context/Context\";\r\n\r\nconst MovieControls = ({ type, movie }) => {\r\n\tconst { removeFromWatchList, addToWatched, watchList, addToWatchList, watched } = useContext(\r\n\t\tContext\r\n\t);\r\n\r\n\tlet storedMovie = watchList.find((o) => o.id === movie.id);\r\n\tlet watchedMovie = watched.find((o) => o.id === movie.id);\r\n\tconst isDisabled = storedMovie || watchedMovie ? true : false;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{type === \"watchlist\" ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<IconButton onClick={() => removeFromWatchList(movie.id)}>\r\n\t\t\t\t\t\t<RemoveIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton onClick={() => addToWatched(movie)}>\r\n\t\t\t\t\t\t<CheckIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</>\r\n\t\t\t) : null}\r\n\r\n\t\t\t{type === \"add\" ? (\r\n\t\t\t\t<IconButton onClick={() => addToWatchList(movie)} disabled={isDisabled}>\r\n\t\t\t\t\t<AddIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t) : null}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default MovieControls;\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n\tCard,\r\n\tCardActionArea,\r\n\tTypography,\r\n\tCardContent,\r\n\tCardMedia,\r\n\tCardActions,\r\n\tmakeStyles,\r\n\tButton,\r\n\tIconButton,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport { Context } from \"../context/Context\";\r\nimport MovieControls from \"./MovieControls\";\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\twidth: 250,\r\n\t},\r\n\tmedia: {\r\n\t\theight: 400,\r\n\t},\r\n});\r\n\r\nconst ResultCard = ({ movie, title, poster, description, rating, releaseDate, type }) => {\r\n\tconst classes = useStyles();\r\n\tconst { addToWatchList, watchList } = useContext(Context);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Card className={classes.root}>\r\n\t\t\t\t<CardActionArea>\r\n\t\t\t\t\t{poster && (\r\n\t\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\t\tclassName={classes.media}\r\n\t\t\t\t\t\t\timage={`https://image.tmdb.org/t/p/w400${poster}`}\r\n\t\t\t\t\t\t\ttitle={`${title} poster`}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n\t\t\t\t\t\t\t{title}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\">\r\n\t\t\t\t\t\t\t{releaseDate && releaseDate.substring(0, 4)}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t{rating > 0 && (\r\n\t\t\t\t\t\t\t<Typography variant=\"h3\">\r\n\t\t\t\t\t\t\t\t<StarIcon />\r\n\t\t\t\t\t\t\t\t{rating}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n\t\t\t\t\t\t\t{description}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</CardActionArea>\r\n\t\t\t\t<CardActions>\r\n\t\t\t\t\t<MovieControls type={type} movie={movie} />\r\n\t\t\t\t\t<Button size=\"small\" color=\"secondary\">\r\n\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\tstyle={{ textDecoration: \"none\", color: \"inherit\" }}\r\n\t\t\t\t\t\t\thref={`https://www.imdb.com/find?q=${title}`}\r\n\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tInfo\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ResultCard;\r\n","import React from \"react\";\r\nimport ResultCard from \"./ResultCard\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst Add = ({ results }) => {\r\n\tconst movies = results.map((movie) => (\r\n\t\t<Grid item key={movie.id}>\r\n\t\t\t<ResultCard\r\n\t\t\t\tmovie={movie}\r\n\t\t\t\ttitle={movie.title}\r\n\t\t\t\tposter={movie.poster_path}\r\n\t\t\t\tdescription={movie.overview}\r\n\t\t\t\trating={movie.vote_average}\r\n\t\t\t\treleaseDate={movie.release_date}\r\n\t\t\t\ttype=\"add\"\r\n\t\t\t/>\r\n\t\t</Grid>\r\n\t));\r\n\r\n\treturn (\r\n\t\t<div style={{ padding: 20 }}>\r\n\t\t\t<Grid style={{ marginTop: 20 }} container justify=\"center\" spacing={3}>\r\n\t\t\t\t{movies}\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Add;\r\n","import React, { useContext } from \"react\";\r\nimport { Context } from \"../context/Context\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport ResultCard from \"./ResultCard\";\r\n\r\nconst Watched = () => {\r\n\tconst { watched } = useContext(Context);\r\n\r\n\tconst watchedCard = watched.map((movie) => (\r\n\t\t<Grid item key={movie.id}>\r\n\t\t\t<ResultCard\r\n\t\t\t\ttype=\"watched\"\r\n\t\t\t\tmovie={movie}\r\n\t\t\t\ttitle={movie.title}\r\n\t\t\t\tposter={movie.poster_path}\r\n\t\t\t\tdescription={movie.overview}\r\n\t\t\t\trating={movie.vote_average}\r\n\t\t\t\treleaseDate={movie.release_date}\r\n\t\t\t/>\r\n\t\t</Grid>\r\n\t));\r\n\r\n\treturn (\r\n\t\t<div style={{ padding: 20 }}>\r\n\t\t\t<Grid style={{ marginTop: 20 }} container justify=\"center\" spacing={3}>\r\n\t\t\t\t{watchedCard}\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Watched;\r\n","import React, { useContext } from \"react\";\r\nimport { Context } from \"../context/Context\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport ResultCard from \"./ResultCard\";\r\n\r\nconst Watchlist = () => {\r\n\tconst { watchList } = useContext(Context);\r\n\r\n\tconst watchlistCard = watchList.map((movie) => (\r\n\t\t<Grid item key={movie.id}>\r\n\t\t\t<ResultCard\r\n\t\t\t\ttype=\"watchlist\"\r\n\t\t\t\tmovie={movie}\r\n\t\t\t\ttitle={movie.title}\r\n\t\t\t\tposter={movie.poster_path}\r\n\t\t\t\tdescription={movie.overview}\r\n\t\t\t\trating={movie.vote_average}\r\n\t\t\t\treleaseDate={movie.release_date}\r\n\t\t\t/>\r\n\t\t</Grid>\r\n\t));\r\n\r\n\treturn (\r\n\t\t<div style={{ padding: 20 }}>\r\n\t\t\t<Grid style={{ marginTop: 20 }} container justify=\"center\" spacing={3}>\r\n\t\t\t\t{watchList.length > 0 ? (\r\n\t\t\t\t\twatchlistCard\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Typography variant=\"h4\">It looks empty here... Search for a movie!</Typography>\r\n\t\t\t\t)}\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Watchlist;\r\n","import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Add from \"./components/Add\";\nimport Watched from \"./components/Watched\";\nimport Watchlist from \"./components/Watchlist\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport { ContextProvider } from \"./context/Context\";\nimport \"./App.css\";\n\nfunction App() {\n\tconst [results, setResults] = useState([]);\n\n\tconst handleResults = (value) => {\n\t\tsetResults(value);\n\t};\n\n\tconst darkTheme = createMuiTheme({\n\t\tpalette: {\n\t\t\ttype: \"dark\",\n\t\t},\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t<ContextProvider>\n\t\t\t\t<ThemeProvider theme={darkTheme}>\n\t\t\t\t\t<CssBaseline />\n\t\t\t\t\t<Router>\n\t\t\t\t\t\t<Header passResults={handleResults} />\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t\t<Watchlist />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Route path=\"/watched\">\n\t\t\t\t\t\t\t\t<Watched />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Route path=\"/add\">\n\t\t\t\t\t\t\t\t<Add results={results} />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Router>\n\t\t\t\t</ThemeProvider>\n\t\t\t</ContextProvider>\n\t\t</>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}